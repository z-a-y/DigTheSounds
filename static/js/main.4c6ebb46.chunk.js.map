{"version":3,"sources":["config.js","hash.js","components/trackCard/TrackCard.jsx","components/topBar/TopBar.jsx","App.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","TrackCard","url","audioObj","Audio","addEventListener","event","play","setTimeout","pause","_this","this","classes","props","releaseDate","album","release_date","previewURL","preview_url","releaseYear","react_default","a","createElement","Grid","Card","raised","className","root","CardActionArea","disableTouchRipple","CardMedia","component","alt","name","image","images","title","key","CardContent","Typography","gutterBottom","variant","noWrap","color","artists","Fab","onClick","playPreview","fab1","size","PlayArrow_default","playIcon","React","Component","withStyles","maxWidth","position","top","right","TopBar","AppBar","Toolbar","dense","RadioGroup","row","defaultValue","onChange","handleChange","FormControlLabel","value","control","Radio","label","float","marginLeft","marginRight","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","token","duration_ms","no_data","term","user","getCurrentlyPlaying","bind","assertThisInitialized","_token","access_token","setState","getUser","prevState","_this2","$","type","beforeSend","xhr","setRequestHeader","success","data","items","_this3","console","log","target","Button","href","concat","join","disableElevation","loginButton","Fragment","topBar_TopBar","container","spacing","direction","justify","alignItems","grid1","map","trackCard_TrackCard","marginTop","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4c6ebb46.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"612ced444c3b4b5bb5359d317aaf8dba\";\nexport const redirectUri = \"https://z-a-y.github.io/DigTheSounds/redirect\";\nexport const scopes = [\n    \"user-top-read\",\n];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import React from 'react';\nimport {\n    Card,\n    CardMedia,\n    Typography,\n    CardContent,\n    CardActionArea,\n    Grid, withStyles,\n    Fab,\n} from '@material-ui/core';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nconst useStyles = () => ({\n    root: {\n        maxWidth: 250,\n    },\n    fab1: {\n        position: \"absolute\",\n        top: 10,\n        right: 10\n    }\n});\n\nclass TrackCard extends React.Component {\n\n    playPreview(url) {\n        let audioObj = new Audio(url);\n\n        audioObj.addEventListener(\"canplaythrough\", event => {\n            /* the audio is now playable; play it if permissions allow */\n            audioObj.play();\n            setTimeout(function () { audioObj.pause(); }, 7000);\n        });\n    }\n\n    render() {\n\n        const { classes } = this.props;\n        let releaseDate = this.props.item.album.release_date;\n        let previewURL = this.props.item.preview_url;\n        let releaseYear = \"\";\n        if (releaseDate) {\n            releaseYear = releaseDate.substring(0, 4);\n        }\n\n        return (\n            <Grid\n                item\n            >\n                <Card raised={true} className={classes.root}>\n                    <CardActionArea disableTouchRipple>\n                        <CardMedia\n                            component=\"img\"\n                            alt={this.props.item.name}\n                            image={this.props.item.album.images[0].url}\n                            title={this.props.item.name}\n                            key={this.props.item.name}\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\n                                {this.props.item.name}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {this.props.item.artists[0].name}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"textSecondary\" component=\"p\" noWrap>\n                                {this.props.item.album.name + \" (\" + releaseYear + \")\"}\n                            </Typography>\n                        </CardContent>\n                        <Fab\n                            onClick={() => this.playPreview(previewURL)}\n                            color=\"secondary\"\n                            className={classes.fab1}\n                            size=\"small\"\n                        >\n                            {/* {\"Popularity: \" + this.props.item.popularity} */}\n                            <PlayArrowIcon className={classes.playIcon} />\n                        </Fab>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n        );\n    }\n}\n\nexport default withStyles(useStyles) (TrackCard);\n\n\n\n\n","import React from 'react';\nimport {\n    Radio,\n    RadioGroup, FormControlLabel,\n    AppBar, Toolbar, withStyles,\n    IconButton,\n} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = () => ({\n    root: {\n        float: 'none',\n        maxWidth: '450px',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n});\n\nclass TopBar extends React.Component {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppBar position=\"static\">\n                <Toolbar dense=\"true\">\n                    <RadioGroup row name=\"gender1\" defaultValue=\"\" onChange={this.props.handleChange} className={classes.root}>\n                        <FormControlLabel value=\"short\" control={<Radio />} label=\"Short Term\" />\n                        <FormControlLabel value=\"medium\" control={<Radio />} label=\"Medium Term\" />\n                        <FormControlLabel value=\"long\" control={<Radio />} label=\"Long Term\" />\n                    </RadioGroup>\n                    {/* <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        // aria-haspopup=\"true\"\n                        // onClick={handleMenu}\n                        color=\"inherit\"\n                    >\n                        <AccountCircle />\n                    </IconButton> */}\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(TopBar);","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter, Route, Switch\n} from 'react-router-dom';\nimport * as $ from \"jquery\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport {\n  Button, Grid, withStyles,\n  Paper,\n} from '@material-ui/core';\nimport hash from \"./hash\";\nimport \"./App.css\";\nimport TrackCard from \"./components/trackCard/TrackCard\";\nimport TopBar from \"./components/topBar/TopBar\";\n\nconst useStyles = () => ({\n  root: {\n    float: 'none',\n    maxWidth: '450px',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  },\n\n  grid1: {\n    marginTop: \"8px\"\n  },\n\n  loginButton: {\n    marginTop: \"40vh\"\n  }\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      item: {\n        album: {\n          images: [{ url: \"\" }]\n        },\n        name: \"\",\n        artists: [{ name: \"\" }],\n        duration_ms: 0\n      },\n      no_data: false,\n      term: \"medium\",\n      user: {}\n    };\n\n    this.getCurrentlyPlaying = this.getCurrentlyPlaying.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n\n  componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token\n      });\n      this.getCurrentlyPlaying(_token);\n      this.getUser(_token);\n    }\n\n  }\n\n  componentDidUpdate(prevState) {\n    // Set token\n    let _token = hash.access_token;\n\n    if (prevState.term !== this.state.term) {\n      this.getCurrentlyPlaying(_token);\n    }\n    \n  }\n  \n  getCurrentlyPlaying(token) {\n    // Make a call using the token\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me/top/tracks?time_range=\" +this.state.term+\"_term&limit=12\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empty\n        if(!data) {\n          this.setState({\n            no_data: true,\n          });\n          return;\n        }\n        \n        this.setState({\n          items: data.items,\n          no_data: false /* We need to \"reset\" the boolean, in case the\n                            user does not give F5 and has opened his Spotify. */\n        });\n      }\n    });\n\n    \n  }\n\n  getUser(token) {\n    $.ajax({\n      url: \"https://api.spotify.com/v1/me\",\n      type: \"GET\",\n      beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n      },\n      success: data => {\n        // Checks if the data is not empt\n\n        this.setState({\n          user: data,\n        });\n        console.log(data);\n      }\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      term: event.target.value,\n    });\n\n  };\n\n  render() {\n    let data = [];\n    const { classes } = this.props;\n\n    if (this.state.items) {\n      data = this.state.items;\n    }\n\n\n    return (\n        <div className=\"App\">\n          {!this.state.token && (\n            <Button\n              href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              disableElevation\n              className={classes.loginButton}\n            >\n              Login to Spotify\n            </Button>\n          )}\n          {this.state.token && !this.state.no_data && (\n            <React.Fragment>\n              <TopBar handleChange={this.handleChange}></TopBar>\n              <Grid\n                container\n                spacing={3}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.grid1}\n              >\n                {data.map((item) => (\n                  <TrackCard\n                    key={item.name}\n                    item={item}\n                  />\n                ))}\n              </Grid>\n            </React.Fragment>\n          )}\n        </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles) (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}